// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// AUTHENTICATION

enum UserRole {
  ADMIN
  USER
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          UserRole  @default(USER)
  // accounts      Account[]
  // isTwoFactorEnabled Boolean   @default(false)
  // Optional for WebAuthn support
  // Authenticator Authenticator[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Account   Account[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

// MEDICAL PROVIDER
model HealthcareProvider {
  id           Int                     @id @default(autoincrement())
  name         String
  address      String?
  phone_number String?
  stateId      Int
  typeId       Int
  tierId       Int
  location     String?
  state        HealthcareProviderState @relation(fields: [stateId], references: [id])
  type         HealthcareProviderType  @relation(fields: [typeId], references: [id])
  tier         HealthcareProviderTier  @relation(fields: [tierId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model HealthcareProviderState {
  id                  Int                  @id @default(autoincrement())
  name                String
  healthcareProviders HealthcareProvider[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model HealthcareProviderType {
  id                  Int                  @id @default(autoincrement())
  name                String
  healthcareProviders HealthcareProvider[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model HealthcareProviderTier {
  id                  Int                  @id @default(autoincrement())
  name                String
  healthcareProviders HealthcareProvider[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
